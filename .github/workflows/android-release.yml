name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - master

jobs:
  flutter_test:
    name: Run Flutter Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter Analyze
        run: flutter analyze

      - name: Run Flutter Tests
        run: flutter test

  flutter_build_deploy_web:
    name: Build and Deploy Web
    runs-on: ubuntu-latest
    needs: flutter_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN }}
          publish_dir: ./build/web

  # build_android:
  #   name: Android Build Only
  #   needs: [flutter_test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up JDK
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: 'zulu'
  #         java-version: '17'

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.24.3'
  #         channel: 'stable'

  #     - name: Set up Keystore
  #       run: |
  #         echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/upload-keystore.jks
  #       working-directory: .  

  #     - name: Flutter Clean & Pub Get
  #       run: |
  #         flutter clean
  #         flutter pub get 

  #     - name: Create key.properties
  #       run: |
  #         echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.MYAPP_UPLOAD_STORE_PASSWORD }}" > android/key.properties
  #         echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.MYAPP_UPLOAD_KEY_PASSWORD }}" >> android/key.properties
  #         echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.MYAPP_UPLOAD_KEY_ALIAS }}" >> android/key.properties
  #         echo "MYAPP_UPLOAD_STORE_FILE=upload-keystore.jks" >> android/key.properties
  #       working-directory: .      

  #     - name: Build Flutter App (Android)
  #       run: flutter build appbundle --release

  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: '3.0.0'

  #     - name: Install Fastlane Dependencies
  #       run: |
  #         cd android
  #         gem install bundler:1.17.2
  #         bundle install

  #     - name: Run Fastlane for Development Branch
  #       if: github.ref == 'refs/heads/dev'
  #       run: |
  #         cd android
  #         bundle exec fastlane build_android
  #       env:
  #         AAB_FILE_PATH: ../build/app/outputs/bundle/release/app-release.aab

  #     - name: Run Fastlane for Master Branch
  #       if: github.ref == 'refs/heads/master'
  #       run: |
  #         cd android
  #         bundle exec fastlane promote_to_production
  #       env:
  #         MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.MYAPP_UPLOAD_KEY_ALIAS }}
  #         MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.MYAPP_UPLOAD_KEY_PASSWORD }}
  #         MYAPP_UPLOAD_STORE_FILE: upload-keystore.jks
  #         MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.MYAPP_UPLOAD_STORE_PASSWORD }}

  # build_ios:
  #   name: Build iOS App
  #   needs: [build_android]
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up JDK
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: "17"

  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v1
  #       with:
  #         channel: "stable"

  #     - name: Flutter Clean & Pub Get
  #       run: |
  #         flutter clean
  #         flutter pub get 

  #     - name: Build iOS App (No Codesign)
  #       run: flutter build ios --no-codesign
